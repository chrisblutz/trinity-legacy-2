module Trinity
    class MapIterator >> Iterator
        private
            var map, keys, i = 0
        end

        public
            def initialize(map)
                this.map = map
                this.keys = map.keys()
            end

            def nextKey
                n = keys[i]
                i += 1
                n
            end

            def next
                n = nextKey()
                { n: map[n] }
            end

            def hasNext
                i < keys.length()
            end

            def reset
                i = 0
            end

            def iterate(&block)
                reset()
                while hasNext()
                    key = nextKey()
                    block.call(key, map[key])
                    if block.isBroken()
                        break
                    end
                end
            end

            def toString
                getClass() + map.toString()
            end
        end
    end
end
